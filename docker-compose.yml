version: '3'

services:
  postgres:
    image: postgres:latest
    ports:
      - "5432:5432"
    networks:
      - stratos_net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${PG_PASSWORD}
      POSTGRES_DB: lucid
  swagger-ui:
    image: swaggerapi/swagger-ui
    ports:
      - "4444:8080"
    networks:
      - stratos_net
    volumes:
      - ./swagger/api.json:/foo/api.json
    environment:
      - SWAGGER_JSON=/foo/api.json
  server:
    build:
      context: backend/.
      dockerfile: Dockerfile
    networks:
      - stratos_net
    ports:
      - "8080:3333"
      - "3333:3333"
    depends_on:
      postgres:
        condition: service_healthy
    links:
      - "postgres:db"
    environment:
      DATABASE_CONNECTION: pg
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: ${PG_PASSWORD}
      DB_NAME: lucid
  client_web:
    build:
      context: web-app/.
      dockerfile: Dockerfile
    ports:
      - "8081:3000"
    networks:
      - stratos_net
    volumes:
      - app-volumes:/app
    links:
      - "postgres:db"
  client_mobile:
    depends_on:
      - client_web
    build:
      context: mobile/.
      dockerfile: Dockerfile
    volumes:
      - app-volumes:/usr/mobile
  backend_scheduler:
    depends_on:
      postgres:
        condition: service_healthy
    build:
      context: backend/.
      dockerfile: scheduler.Dockerfile
    networks:
      - stratos_net
    links:
      - "postgres:db"


volumes:
  app-volumes:

networks:
  stratos_net:
    name: stratos_network
