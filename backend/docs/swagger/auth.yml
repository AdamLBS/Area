openapi: 3.0.0
components:
  securitySchemes:
    cookieAuth: # arbitrary name for the security scheme; will be used in the "security" key later
      type: apiKey
      in: cookie
      name: adonis-session # cookie name

/api/auth/register:
  post:
    tags:
      - Auth
    description: Register
    summary: Register a new user
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              email:
                type: string
                example: "test@testemail.fr"
                required: true
              username:
                type: string
                example: "testuser"
                required: true
              password:
                type: string
                example: "password"
                required: true
              password_confirmation:
                type: string
                example: "password"
                required: true
    responses:
      200:
        description: User signed up successfully

/api/auth/login:
  post:
    tags:
      - Auth
    summary: Authenticate a user
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              email:
                type: string
                format: email
              password:
                type: string
    responses:
      "200":
        description: Successful login
        headers:
          Set-Cookie:
            schema:
              type: string
              example: "adonis-session=eeee"
      "400":
        description: Invalid request
      "401":
        description: Unauthorized
      "500":
        description: Internal server error

/api/auth/logout:
  post:
    tags:
      - Auth
    security:
      - cookieAuth: []
    description: Logout
    produces:
      - application/json
    responses:
      200:
        description: User logged out successfully

/api/auth/register/verify/step/1:
  post:
    tags:
      - Auth
    description: Verify the register step 1
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              email:
                type: string
                example: "test@testemail.fr"
    responses:
      200:
        description: Email is available
